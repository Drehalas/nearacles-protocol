# NEAR Oracle Intent Protocol - Testnet Docker Compose Configuration
# Complete testnet deployment stack

version: '3.8'

services:
  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.testnet
      target: static-server
    container_name: nearacles-frontend-testnet
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_DEPLOYMENT_ENV=testnet
    networks:
      - nearacles-testnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # WebSocket Server
  websocket:
    build:
      context: ../
      dockerfile: docker/Dockerfile.websocket
    container_name: nearacles-websocket-testnet
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - WEBSOCKET_PORT=8080
      - NEAR_NETWORK_ID=testnet
    networks:
      - nearacles-testnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AI Decision Engine (if available)
  ai-engine:
    build:
      context: ../
      dockerfile: docker/Dockerfile.ai
    container_name: nearacles-ai-testnet
    environment:
      - NODE_ENV=production
      - NEAR_NETWORK_ID=testnet
      - AI_MODEL_ENDPOINT=${AI_MODEL_ENDPOINT:-http://localhost:5000}
    networks:
      - nearacles-testnet
    restart: unless-stopped
    depends_on:
      - websocket

  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nearacles-nginx-testnet
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/testnet.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - nearacles-testnet
    restart: unless-stopped
    depends_on:
      - frontend
      - websocket

  # Redis for caching (optional for testnet)
  redis:
    image: redis:7-alpine
    container_name: nearacles-redis-testnet
    ports:
      - "6379:6379"
    networks:
      - nearacles-testnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  nearacles-testnet:
    driver: bridge
    name: nearacles-testnet

volumes:
  redis-data:
    driver: local