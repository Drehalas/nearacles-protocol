<testsuites id="" name="" tests="700" failures="8" skipped="688" errors="0" time="51.415348">
<testsuite name="accessibility.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="7" failures="3" skipped="0" time="48.237" errors="0">
<testcase name="Accessibility Tests › should not have any accessibility violations" classname="accessibility.spec.ts" time="7.374">
<failure message="accessibility.spec.ts:10:7 should not have any accessibility violations" type="FAILURE">
<![CDATA[  [chromium] › accessibility.spec.ts:10:7 › Accessibility Tests › should not have any accessibility violations 

    AssertionError: 3 accessibility violations were detected
        at testResultDependsOnViolations (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\utils.js:16:26)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\index.js:143:51
        at fulfilled (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\index.js:28:58)

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\test-results\accessibility-Accessibilit-24333-ny-accessibility-violations-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\test-results\accessibility-Accessibilit-24333-ny-accessibility-violations-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\test-results\accessibility-Accessibilit-24333-ny-accessibility-violations-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[┌─────────┬──────────────────┬────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────┐
│ (index) │ id               │ impact     │ description                                                                                                      │ nodes │
├─────────┼──────────────────┼────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────┤
│ 0       │ [32m'button-name'[39m    │ [32m'critical'[39m │ [32m'Ensure buttons have discernible text'[39m                                                                           │ [33m3[39m     │
│ 1       │ [32m'color-contrast'[39m │ [32m'serious'[39m  │ [32m'Ensure the contrast between foreground and background colors meets WCAG 2 AA minimum contrast ratio thresholds'[39m │ [33m2[39m     │
│ 2       │ [32m'region'[39m         │ [32m'moderate'[39m │ [32m'Ensure all page content is contained by landmarks'[39m                                                              │ [33m5[39m     │
└─────────┴──────────────────┴────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────┘
┌─────────┬────────────────────────────────────────────────────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬────────────┐
│ (index) │ target                                                     │ html                                                                                                                                                                                                                                     │ violations │
├─────────┼────────────────────────────────────────────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼────────────┤
│ 0       │ [32m'[".bg-gray-800.hover\\\\:bg-gray-700.w-10:nth-child(1)"]'[39m │ [32m'<button class="w-10 h-10 bg-gray-800 hover:bg-gray-700 rounded-lg flex items-center justify-center cursor-pointer"><i class="ri-github-line text-gray-400"></i></button>'[39m                                                               │ [32m'[0]'[39m      │
│ 1       │ [32m'[".bg-gray-800.hover\\\\:bg-gray-700.w-10:nth-child(2)"]'[39m │ [32m'<button class="w-10 h-10 bg-gray-800 hover:bg-gray-700 rounded-lg flex items-center justify-center cursor-pointer"><i class="ri-twitter-line text-gray-400"></i></button>'[39m                                                              │ [32m'[0]'[39m      │
│ 2       │ [32m'[".bg-gray-800.hover\\\\:bg-gray-700.w-10:nth-child(3)"]'[39m │ [32m'<button class="w-10 h-10 bg-gray-800 hover:bg-gray-700 rounded-lg flex items-center justify-center cursor-pointer"><i class="ri-discord-line text-gray-400"></i></button>'[39m                                                              │ [32m'[0]'[39m      │
│ 3       │ [32m'[".px-4"]'[39m                                                │ [32m'<button class="bg-green-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-700 whitespace-nowrap cursor-pointer">Connect Wallet</button>'[39m                                                                                   │ [32m'[1]'[39m      │
│ 4       │ [32m'[".bg-green-600.hover\\\\:bg-green-700.px-8"]'[39m            │ [32m'<button class="bg-green-600 hover:bg-green-700 text-white px-8 py-4 rounded-lg font-semibold text-lg whitespace-nowrap cursor-pointer">Launch Platform</button>'[39m                                                                        │ [32m'[1]'[39m      │
│ 5       │ [32m'[".text-5xl"]'[39m                                            │ [32m'<h1 class="text-5xl lg:text-7xl font-bold text-white mb-6 leading-tight">NEAR Protocol<br><span class="text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-400">Oracle Network</span></h1>'[39m                           │ [32m'[2]'[39m      │
│ 6       │ [32m'[".text-gray-200"]'[39m                                       │ [32m'<p class="text-xl text-gray-200 mb-8 max-w-2xl leading-relaxed">Advanced NEAR blockchain oracle platform with multiple data sources, real-time consensus algorithms, and enterprise-grade security for decentralized applications.</p>'[39m │ [32m'[2]'[39m      │
│ 7       │ [32m'["section:nth-child(3)"]'[39m                                 │ [32m'<section class="py-24 bg-white">'[39m                                                                                                                                                                                                       │ [32m'[2]'[39m      │
│ 8       │ [32m'[".bg-gray-50"]'[39m                                          │ [32m'<section class="py-24 bg-gray-50">'[39m                                                                                                                                                                                                     │ [32m'[2]'[39m      │
│ 9       │ [32m'["section:nth-child(5)"]'[39m                                 │ [32m'<section class="py-24 bg-gradient-to-r from-green-600 to-blue-600">'[39m                                                                                                                                                                    │ [32m'[2]'[39m      │
└─────────┴────────────────────────────────────────────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴────────────┘

[[ATTACHMENT|accessibility-Accessibilit-24333-ny-accessibility-violations-chromium\test-failed-1.png]]

[[ATTACHMENT|accessibility-Accessibilit-24333-ny-accessibility-violations-chromium\video.webm]]

[[ATTACHMENT|accessibility-Accessibilit-24333-ny-accessibility-violations-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility Tests › should have proper heading structure" classname="accessibility.spec.ts" time="6.466">
</testcase>
<testcase name="Accessibility Tests › should have proper focus management" classname="accessibility.spec.ts" time="6.622">
</testcase>
<testcase name="Accessibility Tests › should have proper color contrast" classname="accessibility.spec.ts" time="7.381">
<failure message="accessibility.spec.ts:45:7 should have proper color contrast" type="FAILURE">
<![CDATA[  [chromium] › accessibility.spec.ts:45:7 › Accessibility Tests › should have proper color contrast 

    AssertionError: 3 accessibility violations were detected
        at testResultDependsOnViolations (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\utils.js:16:26)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\index.js:143:51
        at fulfilled (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\index.js:28:58)

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\test-results\accessibility-Accessibilit-1d235--have-proper-color-contrast-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\test-results\accessibility-Accessibilit-1d235--have-proper-color-contrast-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\test-results\accessibility-Accessibilit-1d235--have-proper-color-contrast-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[┌─────────┬──────────────────┬────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────┐
│ (index) │ id               │ impact     │ description                                                                                                      │ nodes │
├─────────┼──────────────────┼────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────┤
│ 0       │ [32m'button-name'[39m    │ [32m'critical'[39m │ [32m'Ensure buttons have discernible text'[39m                                                                           │ [33m3[39m     │
│ 1       │ [32m'color-contrast'[39m │ [32m'serious'[39m  │ [32m'Ensure the contrast between foreground and background colors meets WCAG 2 AA minimum contrast ratio thresholds'[39m │ [33m2[39m     │
│ 2       │ [32m'region'[39m         │ [32m'moderate'[39m │ [32m'Ensure all page content is contained by landmarks'[39m                                                              │ [33m5[39m     │
└─────────┴──────────────────┴────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────┘

[[ATTACHMENT|accessibility-Accessibilit-1d235--have-proper-color-contrast-chromium\test-failed-1.png]]

[[ATTACHMENT|accessibility-Accessibilit-1d235--have-proper-color-contrast-chromium\video.webm]]

[[ATTACHMENT|accessibility-Accessibilit-1d235--have-proper-color-contrast-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility Tests › should support keyboard navigation" classname="accessibility.spec.ts" time="6.612">
</testcase>
<testcase name="Accessibility Tests › should have proper ARIA attributes" classname="accessibility.spec.ts" time="7.416">
<failure message="accessibility.spec.ts:69:7 should have proper ARIA attributes" type="FAILURE">
<![CDATA[  [chromium] › accessibility.spec.ts:69:7 › Accessibility Tests › should have proper ARIA attributes 

    AssertionError: 3 accessibility violations were detected
        at testResultDependsOnViolations (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\utils.js:16:26)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\index.js:143:51
        at fulfilled (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\node_modules\axe-playwright\dist\index.js:28:58)

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\test-results\accessibility-Accessibilit-332ae-have-proper-ARIA-attributes-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\test-results\accessibility-Accessibilit-332ae-have-proper-ARIA-attributes-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\test-results\accessibility-Accessibilit-332ae-have-proper-ARIA-attributes-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[┌─────────┬──────────────────┬────────────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────┐
│ (index) │ id               │ impact     │ description                                                                                                      │ nodes │
├─────────┼──────────────────┼────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────┤
│ 0       │ [32m'button-name'[39m    │ [32m'critical'[39m │ [32m'Ensure buttons have discernible text'[39m                                                                           │ [33m3[39m     │
│ 1       │ [32m'color-contrast'[39m │ [32m'serious'[39m  │ [32m'Ensure the contrast between foreground and background colors meets WCAG 2 AA minimum contrast ratio thresholds'[39m │ [33m2[39m     │
│ 2       │ [32m'region'[39m         │ [32m'moderate'[39m │ [32m'Ensure all page content is contained by landmarks'[39m                                                              │ [33m5[39m     │
└─────────┴──────────────────┴────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────┘

[[ATTACHMENT|accessibility-Accessibilit-332ae-have-proper-ARIA-attributes-chromium\test-failed-1.png]]

[[ATTACHMENT|accessibility-Accessibilit-332ae-have-proper-ARIA-attributes-chromium\video.webm]]

[[ATTACHMENT|accessibility-Accessibilit-332ae-have-proper-ARIA-attributes-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Accessibility Tests › should work with screen readers" classname="accessibility.spec.ts" time="6.366">
</testcase>
</testsuite>
<testsuite name="advanced-patterns.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="10" failures="5" skipped="5" time="79.586" errors="0">
<testcase name="Advanced Testing Patterns › should demonstrate page object pattern usage" classname="advanced-patterns.spec.ts" time="16.73">
<failure message="advanced-patterns.spec.ts:14:7 should demonstrate page object pattern usage" type="FAILURE">
<![CDATA[  [chromium] › advanced-patterns.spec.ts:14:7 › Advanced Testing Patterns › should demonstrate page object pattern usage 

    Error: page.waitForSelector: Target page, context or browser has been closed
    Call log:
      - waiting for locator('#root') to be visible


       at utils\test-helpers.ts:15

      13 |   async waitForAppReady(timeout = 15000): Promise<void> {
      14 |     await this.page.waitForLoadState('networkidle');
    > 15 |     await this.page.waitForSelector('#root', { timeout });
         |                     ^
      16 |     await this.page.waitForSelector('.App', { timeout });
      17 |   }
      18 |
        at TestHelpers.waitForAppReady (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\utils\test-helpers.ts:15:21)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\advanced-patterns.spec.ts:15:5

    Error: browserContext._wrapApiCall: Test ended.
    Browser logs:

    <launching> C:\Users\yasin\AppData\Local\ms-playwright\chromium_headless_shell-1181\chrome-win\headless_shell.exe --disable-field-trial-config --disable-background-networking --disable-background-timer-throttling --disable-backgrounding-occluded-windows --disable-back-forward-cache --disable-breakpad --disable-client-side-phishing-detection --disable-component-extensions-with-background-pages --disable-component-update --no-default-browser-check --disable-default-apps --disable-dev-shm-usage --disable-extensions --disable-features=AcceptCHFrame,AutoExpandDetailsElement,AvoidUnnecessaryBeforeUnloadCheckSync,CertificateTransparencyComponentUpdater,DestroyProfileOnBrowserClose,DialMediaRouteProvider,ExtensionManifestV2Disabled,GlobalMediaControls,HttpsUpgrades,ImprovedCookieControls,LazyFrameLoading,LensOverlay,MediaRouter,PaintHolding,ThirdPartyStoragePartitioning,Translate,AutoDeElevate --allow-pre-commit-input --disable-hang-monitor --disable-ipc-flooding-protection --disable-popup-blocking --disable-prompt-on-repost --disable-renderer-backgrounding --force-color-profile=srgb --metrics-recording-only --no-first-run --password-store=basic --use-mock-keychain --no-service-autorun --export-tagged-pdf --disable-search-engine-choice-screen --unsafely-disable-devtools-self-xss-warnings --edge-skip-compat-layer-relaunch --enable-automation --headless --hide-scrollbars --mute-audio --blink-settings=primaryHoverType=2,availableHoverTypes=2,primaryPointerType=4,availablePointerTypes=4 --no-sandbox --user-data-dir=C:\Users\yasin\AppData\Local\Temp\playwright_chromiumdev_profile-JwGYyY --remote-debugging-pipe --no-startup-window
    <launched> pid=69976
    [pid=69976] <gracefully close start>
]]>
</failure>
</testcase>
<testcase name="Advanced Testing Patterns › should use data-driven testing approach" classname="advanced-patterns.spec.ts" time="10.231">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement fluent interface pattern" classname="advanced-patterns.spec.ts" time="10.184">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate custom assertion patterns" classname="advanced-patterns.spec.ts" time="10.118">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use builder pattern for complex test scenarios" classname="advanced-patterns.spec.ts" time="9.083">
<failure message="advanced-patterns.spec.ts:100:7 should use builder pattern for complex test scenarios" type="FAILURE">
<![CDATA[  [chromium] › advanced-patterns.spec.ts:100:7 › Advanced Testing Patterns › should use builder pattern for complex test scenarios 

    Error: Timed out 5000ms waiting for expect(locator).toBeVisible()

    Locator: locator('.App')
    Expected: visible
    Received: <element(s) not found>
    Call log:
      - Expect "toBeVisible" with timeout 5000ms
      - waiting for locator('.App')


      113 |     
      114 |     // Verify scenario completed successfully
    > 115 |     await expect(page.locator('.App')).toBeVisible();
          |                                        ^
      116 |     await helpers.waitForSwaggerUI();
      117 |   });
      118 |
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\advanced-patterns.spec.ts:115:40

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\test-results\advanced-patterns-Advanced-4eb20--for-complex-test-scenarios-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\test-results\advanced-patterns-Advanced-4eb20--for-complex-test-scenarios-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\test-results\advanced-patterns-Advanced-4eb20--for-complex-test-scenarios-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|advanced-patterns-Advanced-4eb20--for-complex-test-scenarios-chromium\test-failed-1.png]]

[[ATTACHMENT|advanced-patterns-Advanced-4eb20--for-complex-test-scenarios-chromium\video.webm]]

[[ATTACHMENT|advanced-patterns-Advanced-4eb20--for-complex-test-scenarios-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Advanced Testing Patterns › should implement retry pattern with exponential backoff" classname="advanced-patterns.spec.ts" time="7.756">
<failure message="advanced-patterns.spec.ts:119:7 should implement retry pattern with exponential backoff" type="FAILURE">
<![CDATA[  [chromium] › advanced-patterns.spec.ts:119:7 › Advanced Testing Patterns › should implement retry pattern with exponential backoff 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      127 |           
      128 |           const delay = Math.pow(2, attempt) * 1000; // Exponential backoff
    > 129 |           await page.waitForTimeout(delay);
          |                      ^
      130 |         }
      131 |       }
      132 |     };
        at retryWithBackoff (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\advanced-patterns.spec.ts:129:22)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\advanced-patterns.spec.ts:135:5
]]>
</failure>
</testcase>
<testcase name="Advanced Testing Patterns › should use observer pattern for event monitoring" classname="advanced-patterns.spec.ts" time="7.747">
<failure message="advanced-patterns.spec.ts:144:7 should use observer pattern for event monitoring" type="FAILURE">
<![CDATA[  [chromium] › advanced-patterns.spec.ts:144:7 › Advanced Testing Patterns › should use observer pattern for event monitoring 

    Error: page.waitForSelector: Target page, context or browser has been closed
    Call log:
      - waiting for locator('#root') to be visible


       at utils\test-helpers.ts:15

      13 |   async waitForAppReady(timeout = 15000): Promise<void> {
      14 |     await this.page.waitForLoadState('networkidle');
    > 15 |     await this.page.waitForSelector('#root', { timeout });
         |                     ^
      16 |     await this.page.waitForSelector('.App', { timeout });
      17 |   }
      18 |
        at TestHelpers.waitForAppReady (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\utils\test-helpers.ts:15:21)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\advanced-patterns.spec.ts:171:5

    Error: browserContext._wrapApiCall: Target page, context or browser has been closed
]]>
</failure>
</testcase>
<testcase name="Advanced Testing Patterns › should implement state machine pattern for complex workflows" classname="advanced-patterns.spec.ts" time="7.736">
<failure message="advanced-patterns.spec.ts:185:7 should implement state machine pattern for complex workflows" type="FAILURE">
<![CDATA[  [chromium] › advanced-patterns.spec.ts:185:7 › Advanced Testing Patterns › should implement state machine pattern for complex workflows 

    Error: page.waitForSelector: Target page, context or browser has been closed
    Call log:
      - waiting for locator('#root') to be visible


       at utils\test-helpers.ts:15

      13 |   async waitForAppReady(timeout = 15000): Promise<void> {
      14 |     await this.page.waitForLoadState('networkidle');
    > 15 |     await this.page.waitForSelector('#root', { timeout });
         |                     ^
      16 |     await this.page.waitForSelector('.App', { timeout });
      17 |   }
      18 |
        at TestHelpers.waitForAppReady (C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\utils\test-helpers.ts:15:21)
        at C:\Users\yasin\Nearacles\nearacles-protocol\frontend\e2e\advanced-patterns.spec.ts:206:5
]]>
</failure>
</testcase>
<testcase name="Advanced Testing Patterns › should use dependency injection pattern for test utilities" classname="advanced-patterns.spec.ts" time="0.001">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate factory pattern for test data" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="API Integration Tests › should load Next.js API routes successfully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API network failures gracefully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle slow API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle malformed API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should respect CORS policies" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API authentication if required" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should validate API response schemas" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle concurrent API requests" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-browser.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should load correctly in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle CSS features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle JavaScript features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should load correctly in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle CSS features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle JavaScript features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should load correctly in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle CSS features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle JavaScript features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work on mobile devices" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different screen resolutions" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should support different color schemes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle reduced motion preferences" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work with disabled JavaScript" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different font sizes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="error-handling.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Error Handling Tests › should handle JavaScript errors gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle missing resources gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle network connectivity issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser resize and orientation changes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle rapid user interactions" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle invalid URLs and routes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser back/forward navigation" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle page refresh at any time" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser storage issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle memory pressure gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Integration Tests - Component and Service Integration › should integrate React components properly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate external libraries correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate CSS modules and styling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser APIs correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should handle data flow between components" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate error boundaries and error handling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with development vs production builds" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate responsive design with functionality" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser navigation and routing" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate performance monitoring" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="load-testing.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Load Testing › should handle multiple concurrent users" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid page interactions" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle memory intensive operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle continuous scrolling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid resize operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should maintain performance with large DOM" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle network throttling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle browser tab switching simulation" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle stress testing of API calls" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="main-page.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Main Page Tests › should load the main page successfully" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should render the main components" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should have proper meta tags" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should load CSS styles" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should not have console errors on load" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should be responsive" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="monitoring.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Monitoring and Observability Tests › should collect and validate performance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor network requests and responses" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor console messages and errors" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor resource loading and caching" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor application state and health" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should generate test execution report" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should validate accessibility compliance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Performance Tests › should load main page within acceptable time" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have good Core Web Vitals" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should not have memory leaks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle multiple rapid clicks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should optimize resource loading" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have efficient rendering" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Security Tests › should not expose sensitive information in source" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent XSS attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle malicious input safely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should not leak information through console" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle HTTPS requirements" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent clickjacking" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should sanitize URLs and redirects" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle browser storage securely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should validate file uploads if any" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Smoke Tests - Critical Path Validation › should pass basic smoke test for application health" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load core dependencies quickly" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should have working navigation" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should handle basic user interaction" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should respond to keyboard input" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should work on mobile viewport" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should maintain functionality after page refresh" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should not have critical JavaScript errors" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load within reasonable resource limits" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should be accessible via different entry points" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="swagger-ui.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Dashboard Navigation Tests › should render main navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to dashboard" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to oracles section" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to analytics" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to explorer" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should have responsive navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-runner.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Test Runner Configuration › should run all test suites successfully" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should have proper test data setup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test isolation" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should provide test reporting data" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test environment cleanup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="user-workflows.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="User Workflow Tests › should complete full user journey through the application" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle typical API exploration workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support keyboard navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle search and filter workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support mobile user workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle copy-paste workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support browser history navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle refresh and reload workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle multi-tab workflow simulation" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle accessibility workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual-regression.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="chromium" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Visual Regression Tests › should match main page screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match SwaggerUI component screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match mobile view screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match tablet view screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match expanded swagger operations" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match dark mode if supported" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match high contrast mode" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match different zoom levels" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match loading states" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should handle screenshot consistency across test runs" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match error state screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Accessibility Tests › should not have any accessibility violations" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper heading structure" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper focus management" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper color contrast" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should support keyboard navigation" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper ARIA attributes" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should work with screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="advanced-patterns.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Advanced Testing Patterns › should demonstrate page object pattern usage" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use data-driven testing approach" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement fluent interface pattern" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate custom assertion patterns" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use builder pattern for complex test scenarios" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement retry pattern with exponential backoff" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use observer pattern for event monitoring" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement state machine pattern for complex workflows" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use dependency injection pattern for test utilities" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate factory pattern for test data" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="API Integration Tests › should load Next.js API routes successfully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API network failures gracefully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle slow API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle malformed API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should respect CORS policies" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API authentication if required" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should validate API response schemas" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle concurrent API requests" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-browser.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should load correctly in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle CSS features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle JavaScript features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should load correctly in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle CSS features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle JavaScript features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should load correctly in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle CSS features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle JavaScript features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work on mobile devices" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different screen resolutions" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should support different color schemes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle reduced motion preferences" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work with disabled JavaScript" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different font sizes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="error-handling.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Error Handling Tests › should handle JavaScript errors gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle missing resources gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle network connectivity issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser resize and orientation changes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle rapid user interactions" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle invalid URLs and routes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser back/forward navigation" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle page refresh at any time" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser storage issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle memory pressure gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Integration Tests - Component and Service Integration › should integrate React components properly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate external libraries correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate CSS modules and styling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser APIs correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should handle data flow between components" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate error boundaries and error handling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with development vs production builds" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate responsive design with functionality" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser navigation and routing" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate performance monitoring" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="load-testing.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Load Testing › should handle multiple concurrent users" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid page interactions" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle memory intensive operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle continuous scrolling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid resize operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should maintain performance with large DOM" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle network throttling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle browser tab switching simulation" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle stress testing of API calls" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="main-page.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Main Page Tests › should load the main page successfully" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should render the main components" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should have proper meta tags" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should load CSS styles" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should not have console errors on load" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should be responsive" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="monitoring.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Monitoring and Observability Tests › should collect and validate performance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor network requests and responses" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor console messages and errors" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor resource loading and caching" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor application state and health" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should generate test execution report" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should validate accessibility compliance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Performance Tests › should load main page within acceptable time" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have good Core Web Vitals" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should not have memory leaks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle multiple rapid clicks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should optimize resource loading" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have efficient rendering" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Security Tests › should not expose sensitive information in source" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent XSS attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle malicious input safely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should not leak information through console" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle HTTPS requirements" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent clickjacking" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should sanitize URLs and redirects" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle browser storage securely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should validate file uploads if any" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Smoke Tests - Critical Path Validation › should pass basic smoke test for application health" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load core dependencies quickly" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should have working navigation" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should handle basic user interaction" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should respond to keyboard input" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should work on mobile viewport" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should maintain functionality after page refresh" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should not have critical JavaScript errors" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load within reasonable resource limits" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should be accessible via different entry points" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="swagger-ui.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Dashboard Navigation Tests › should render main navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to dashboard" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to oracles section" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to analytics" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to explorer" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should have responsive navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-runner.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Test Runner Configuration › should run all test suites successfully" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should have proper test data setup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test isolation" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should provide test reporting data" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test environment cleanup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="user-workflows.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="User Workflow Tests › should complete full user journey through the application" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle typical API exploration workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support keyboard navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle search and filter workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support mobile user workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle copy-paste workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support browser history navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle refresh and reload workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle multi-tab workflow simulation" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle accessibility workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual-regression.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="firefox" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Visual Regression Tests › should match main page screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match SwaggerUI component screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match mobile view screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match tablet view screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match expanded swagger operations" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match dark mode if supported" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match high contrast mode" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match different zoom levels" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match loading states" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should handle screenshot consistency across test runs" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match error state screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Accessibility Tests › should not have any accessibility violations" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper heading structure" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper focus management" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper color contrast" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should support keyboard navigation" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper ARIA attributes" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should work with screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="advanced-patterns.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Advanced Testing Patterns › should demonstrate page object pattern usage" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use data-driven testing approach" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement fluent interface pattern" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate custom assertion patterns" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use builder pattern for complex test scenarios" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement retry pattern with exponential backoff" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use observer pattern for event monitoring" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement state machine pattern for complex workflows" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use dependency injection pattern for test utilities" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate factory pattern for test data" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="API Integration Tests › should load Next.js API routes successfully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API network failures gracefully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle slow API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle malformed API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should respect CORS policies" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API authentication if required" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should validate API response schemas" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle concurrent API requests" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-browser.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should load correctly in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle CSS features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle JavaScript features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should load correctly in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle CSS features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle JavaScript features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should load correctly in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle CSS features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle JavaScript features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work on mobile devices" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different screen resolutions" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should support different color schemes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle reduced motion preferences" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work with disabled JavaScript" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different font sizes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="error-handling.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Error Handling Tests › should handle JavaScript errors gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle missing resources gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle network connectivity issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser resize and orientation changes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle rapid user interactions" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle invalid URLs and routes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser back/forward navigation" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle page refresh at any time" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser storage issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle memory pressure gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Integration Tests - Component and Service Integration › should integrate React components properly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate external libraries correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate CSS modules and styling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser APIs correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should handle data flow between components" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate error boundaries and error handling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with development vs production builds" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate responsive design with functionality" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser navigation and routing" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate performance monitoring" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="load-testing.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Load Testing › should handle multiple concurrent users" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid page interactions" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle memory intensive operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle continuous scrolling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid resize operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should maintain performance with large DOM" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle network throttling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle browser tab switching simulation" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle stress testing of API calls" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="main-page.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Main Page Tests › should load the main page successfully" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should render the main components" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should have proper meta tags" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should load CSS styles" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should not have console errors on load" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should be responsive" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="monitoring.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Monitoring and Observability Tests › should collect and validate performance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor network requests and responses" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor console messages and errors" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor resource loading and caching" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor application state and health" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should generate test execution report" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should validate accessibility compliance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Performance Tests › should load main page within acceptable time" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have good Core Web Vitals" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should not have memory leaks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle multiple rapid clicks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should optimize resource loading" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have efficient rendering" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Security Tests › should not expose sensitive information in source" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent XSS attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle malicious input safely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should not leak information through console" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle HTTPS requirements" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent clickjacking" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should sanitize URLs and redirects" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle browser storage securely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should validate file uploads if any" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Smoke Tests - Critical Path Validation › should pass basic smoke test for application health" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load core dependencies quickly" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should have working navigation" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should handle basic user interaction" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should respond to keyboard input" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should work on mobile viewport" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should maintain functionality after page refresh" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should not have critical JavaScript errors" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load within reasonable resource limits" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should be accessible via different entry points" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="swagger-ui.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Dashboard Navigation Tests › should render main navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to dashboard" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to oracles section" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to analytics" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to explorer" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should have responsive navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-runner.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Test Runner Configuration › should run all test suites successfully" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should have proper test data setup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test isolation" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should provide test reporting data" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test environment cleanup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="user-workflows.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="User Workflow Tests › should complete full user journey through the application" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle typical API exploration workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support keyboard navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle search and filter workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support mobile user workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle copy-paste workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support browser history navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle refresh and reload workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle multi-tab workflow simulation" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle accessibility workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual-regression.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="webkit" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Visual Regression Tests › should match main page screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match SwaggerUI component screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match mobile view screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match tablet view screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match expanded swagger operations" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match dark mode if supported" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match high contrast mode" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match different zoom levels" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match loading states" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should handle screenshot consistency across test runs" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match error state screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Accessibility Tests › should not have any accessibility violations" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper heading structure" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper focus management" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper color contrast" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should support keyboard navigation" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper ARIA attributes" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should work with screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="advanced-patterns.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Advanced Testing Patterns › should demonstrate page object pattern usage" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use data-driven testing approach" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement fluent interface pattern" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate custom assertion patterns" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use builder pattern for complex test scenarios" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement retry pattern with exponential backoff" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use observer pattern for event monitoring" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement state machine pattern for complex workflows" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use dependency injection pattern for test utilities" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate factory pattern for test data" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="API Integration Tests › should load Next.js API routes successfully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API network failures gracefully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle slow API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle malformed API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should respect CORS policies" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API authentication if required" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should validate API response schemas" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle concurrent API requests" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-browser.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should load correctly in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle CSS features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle JavaScript features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should load correctly in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle CSS features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle JavaScript features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should load correctly in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle CSS features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle JavaScript features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work on mobile devices" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different screen resolutions" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should support different color schemes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle reduced motion preferences" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work with disabled JavaScript" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different font sizes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="error-handling.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Error Handling Tests › should handle JavaScript errors gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle missing resources gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle network connectivity issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser resize and orientation changes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle rapid user interactions" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle invalid URLs and routes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser back/forward navigation" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle page refresh at any time" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser storage issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle memory pressure gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Integration Tests - Component and Service Integration › should integrate React components properly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate external libraries correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate CSS modules and styling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser APIs correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should handle data flow between components" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate error boundaries and error handling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with development vs production builds" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate responsive design with functionality" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser navigation and routing" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate performance monitoring" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="load-testing.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Load Testing › should handle multiple concurrent users" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid page interactions" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle memory intensive operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle continuous scrolling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid resize operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should maintain performance with large DOM" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle network throttling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle browser tab switching simulation" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle stress testing of API calls" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="main-page.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Main Page Tests › should load the main page successfully" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should render the main components" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should have proper meta tags" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should load CSS styles" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should not have console errors on load" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should be responsive" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="monitoring.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Monitoring and Observability Tests › should collect and validate performance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor network requests and responses" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor console messages and errors" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor resource loading and caching" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor application state and health" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should generate test execution report" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should validate accessibility compliance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Performance Tests › should load main page within acceptable time" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have good Core Web Vitals" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should not have memory leaks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle multiple rapid clicks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should optimize resource loading" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have efficient rendering" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Security Tests › should not expose sensitive information in source" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent XSS attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle malicious input safely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should not leak information through console" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle HTTPS requirements" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent clickjacking" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should sanitize URLs and redirects" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle browser storage securely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should validate file uploads if any" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Smoke Tests - Critical Path Validation › should pass basic smoke test for application health" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load core dependencies quickly" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should have working navigation" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should handle basic user interaction" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should respond to keyboard input" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should work on mobile viewport" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should maintain functionality after page refresh" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should not have critical JavaScript errors" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load within reasonable resource limits" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should be accessible via different entry points" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="swagger-ui.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Dashboard Navigation Tests › should render main navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to dashboard" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to oracles section" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to analytics" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to explorer" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should have responsive navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-runner.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Test Runner Configuration › should run all test suites successfully" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should have proper test data setup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test isolation" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should provide test reporting data" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test environment cleanup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="user-workflows.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="User Workflow Tests › should complete full user journey through the application" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle typical API exploration workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support keyboard navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle search and filter workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support mobile user workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle copy-paste workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support browser history navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle refresh and reload workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle multi-tab workflow simulation" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle accessibility workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual-regression.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Chrome" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Visual Regression Tests › should match main page screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match SwaggerUI component screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match mobile view screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match tablet view screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match expanded swagger operations" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match dark mode if supported" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match high contrast mode" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match different zoom levels" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match loading states" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should handle screenshot consistency across test runs" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match error state screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="accessibility.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Accessibility Tests › should not have any accessibility violations" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper heading structure" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper focus management" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper color contrast" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should support keyboard navigation" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should have proper ARIA attributes" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Accessibility Tests › should work with screen readers" classname="accessibility.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="advanced-patterns.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Advanced Testing Patterns › should demonstrate page object pattern usage" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use data-driven testing approach" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement fluent interface pattern" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate custom assertion patterns" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use builder pattern for complex test scenarios" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement retry pattern with exponential backoff" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use observer pattern for event monitoring" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should implement state machine pattern for complex workflows" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should use dependency injection pattern for test utilities" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Advanced Testing Patterns › should demonstrate factory pattern for test data" classname="advanced-patterns.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="api-integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="8" failures="0" skipped="8" time="0" errors="0">
<testcase name="API Integration Tests › should load Next.js API routes successfully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API network failures gracefully" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle slow API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle malformed API responses" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should respect CORS policies" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle API authentication if required" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should validate API response schemas" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="API Integration Tests › should handle concurrent API requests" classname="api-integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="cross-browser.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="15" failures="0" skipped="15" time="0" errors="0">
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should load correctly in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle CSS features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › CHROMIUM Browser Tests › should handle JavaScript features in chromium" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should load correctly in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle CSS features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › FIREFOX Browser Tests › should handle JavaScript features in firefox" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should load correctly in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle CSS features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › WEBKIT Browser Tests › should handle JavaScript features in webkit" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work on mobile devices" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different screen resolutions" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should support different color schemes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle reduced motion preferences" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should work with disabled JavaScript" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Cross-Browser Compatibility Tests › should handle different font sizes" classname="cross-browser.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="error-handling.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Error Handling Tests › should handle JavaScript errors gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle missing resources gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle network connectivity issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser resize and orientation changes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle rapid user interactions" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle invalid URLs and routes" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser back/forward navigation" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle page refresh at any time" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle browser storage issues" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Error Handling Tests › should handle memory pressure gracefully" classname="error-handling.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="integration.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Integration Tests - Component and Service Integration › should integrate React components properly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate external libraries correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate CSS modules and styling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser APIs correctly" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should handle data flow between components" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate error boundaries and error handling" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with development vs production builds" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate responsive design with functionality" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate with browser navigation and routing" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Integration Tests - Component and Service Integration › should integrate performance monitoring" classname="integration.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="load-testing.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="9" failures="0" skipped="9" time="0" errors="0">
<testcase name="Load Testing › should handle multiple concurrent users" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid page interactions" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle memory intensive operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle continuous scrolling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle rapid resize operations" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should maintain performance with large DOM" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle network throttling" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle browser tab switching simulation" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Load Testing › should handle stress testing of API calls" classname="load-testing.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="main-page.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Main Page Tests › should load the main page successfully" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should render the main components" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should have proper meta tags" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should load CSS styles" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should not have console errors on load" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Main Page Tests › should be responsive" classname="main-page.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="monitoring.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="7" failures="0" skipped="7" time="0" errors="0">
<testcase name="Monitoring and Observability Tests › should collect and validate performance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor network requests and responses" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor console messages and errors" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor resource loading and caching" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should monitor application state and health" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should generate test execution report" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Monitoring and Observability Tests › should validate accessibility compliance metrics" classname="monitoring.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="performance.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Performance Tests › should load main page within acceptable time" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have good Core Web Vitals" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should not have memory leaks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should handle multiple rapid clicks" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should optimize resource loading" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Performance Tests › should have efficient rendering" classname="performance.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="security.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Security Tests › should not expose sensitive information in source" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should have proper Content Security Policy headers" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent XSS attacks" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle malicious input safely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should not leak information through console" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle HTTPS requirements" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should prevent clickjacking" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should sanitize URLs and redirects" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should handle browser storage securely" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Security Tests › should validate file uploads if any" classname="security.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="smoke.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="Smoke Tests - Critical Path Validation › should pass basic smoke test for application health" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load core dependencies quickly" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should have working navigation" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should handle basic user interaction" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should respond to keyboard input" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should work on mobile viewport" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should maintain functionality after page refresh" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should not have critical JavaScript errors" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should load within reasonable resource limits" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Smoke Tests - Critical Path Validation › should be accessible via different entry points" classname="smoke.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="swagger-ui.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="6" failures="0" skipped="6" time="0" errors="0">
<testcase name="Dashboard Navigation Tests › should render main navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to dashboard" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to oracles section" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to analytics" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should navigate to explorer" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Dashboard Navigation Tests › should have responsive navigation" classname="swagger-ui.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="test-runner.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="5" failures="0" skipped="5" time="0" errors="0">
<testcase name="Test Runner Configuration › should run all test suites successfully" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should have proper test data setup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test isolation" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should provide test reporting data" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Test Runner Configuration › should handle test environment cleanup" classname="test-runner.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="user-workflows.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="10" failures="0" skipped="10" time="0" errors="0">
<testcase name="User Workflow Tests › should complete full user journey through the application" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle typical API exploration workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support keyboard navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle search and filter workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support mobile user workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle copy-paste workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should support browser history navigation workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle refresh and reload workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle multi-tab workflow simulation" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="User Workflow Tests › should handle accessibility workflow" classname="user-workflows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="visual-regression.spec.ts" timestamp="2025-08-10T17:39:11.030Z" hostname="Mobile Safari" tests="11" failures="0" skipped="11" time="0" errors="0">
<testcase name="Visual Regression Tests › should match main page screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match SwaggerUI component screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match mobile view screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match tablet view screenshot" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match expanded swagger operations" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match dark mode if supported" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match high contrast mode" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match different zoom levels" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match loading states" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should handle screenshot consistency across test runs" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Visual Regression Tests › should match error state screenshots" classname="visual-regression.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>