# NEAR Oracle Intent Protocol - Testnet Docker Compose Configuration
# Complete testnet deployment stack

services:
  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.testnet
      target: static-server
    container_name: nearacles-frontend-testnet
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_DEPLOYMENT_ENV=testnet
    networks:
      - nearacles-testnet
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # WebSocket Server
  websocket:
    image: node:22-alpine
    container_name: nearacles-websocket-testnet
    working_dir: /app
    command: sh -c "npm install --silent && npm install tsx && npx tsx backend/infrastructure/websocket-server.ts"
    expose:
      - "8080"
    volumes:
      - .:/app
      - websocket-node-modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - WEBSOCKET_PORT=8080
      - NEAR_NETWORK_ID=testnet
    networks:
      - nearacles-testnet
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:8080/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # AI Decision Engine (if available)
  ai-engine:
    image: node:22-alpine
    container_name: nearacles-ai-testnet
    working_dir: /app
    command: sh -c "npm install --silent && npm install tsx && npx tsx scripts/start-ai-service.ts"
    volumes:
      - .:/app
      - ai-node-modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - NEAR_NETWORK_ID=testnet
      - AI_MODEL_ENDPOINT=${AI_MODEL_ENDPOINT:-http://localhost:5000}
      - WEBSOCKET_URL=ws://nearacles-websocket-testnet:8080
    networks:
      - nearacles-testnet
    restart: unless-stopped
    depends_on:
      - websocket

  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    container_name: nearacles-nginx-testnet
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/testnet.conf:/etc/nginx/conf.d/default.conf
    networks:
      - nearacles-testnet
    restart: unless-stopped
    depends_on:
      - frontend
      - websocket
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # Redis for caching (optional for testnet)
  redis:
    image: redis:7-alpine
    container_name: nearacles-redis-testnet
    ports:
      - '6380:6379' # Use different host port to avoid conflict
    networks:
      - nearacles-testnet
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  nearacles-testnet:
    driver: bridge
    name: nearacles-testnet

volumes:
  redis-data:
    driver: local
  websocket-node-modules:
    driver: local
  ai-node-modules:
    driver: local
